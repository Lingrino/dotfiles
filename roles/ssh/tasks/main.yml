- name: Create the ssh directory
  file:
    state: directory
    path: "{{ ansible_env.HOME }}/.ssh"
    mode: 0700
    owner: "{{ ansible_user_id }}"
  register: R_ssh_dir

- name: Create the ssh sockets directory
  file:
    state: directory
    path: "{{ R_ssh_dir.path }}/sockets"
    mode: 0700
    owner: "{{ ansible_user_id }}"

- name: Copy over the ssh config file
  template:
    src: config.j2
    dest: "{{ R_ssh_dir.path }}/config"
    mode: 0600
    owner: "{{ ansible_user_id }}"

- name: Copy over my SSH public keys
  copy:
    content: "{{
      lookup(
        'onepassword_raw',
        item.value.op_name_public,
        subdomain=op_auths[item.value.op_shorthand].shorthand,
        username=op_auths[item.value.op_shorthand].email,
        secret_key=op_auths[item.value.op_shorthand].secret_key,
        vault_password=lookup('vars', 'op_password_'+op_auths[item.value.op_shorthand].shorthand)
      ) | json_query('details.notesPlain')
    }}"
    dest: "{{ ansible_env.HOME }}/.ssh/{{ item.value.file_name }}.pub"
    mode: 0600
    owner: "{{ ansible_user_id }}"
  no_log: true
  loop: "{{ ssh_keys | dict2items }}"
  tags:
    - post
    - 1password

- name: Copy over my SSH private keys
  copy:
    content: "{{
      lookup(
        'onepassword_raw',
        item.value.op_name_private,
        subdomain=op_auths[item.value.op_shorthand].shorthand,
        username=op_auths[item.value.op_shorthand].email,
        secret_key=op_auths[item.value.op_shorthand].secret_key,
        vault_password=lookup('vars', 'op_password_'+op_auths[item.value.op_shorthand].shorthand)
      ) | json_query('details.notesPlain')
    }}"
    dest: "{{ ansible_env.HOME }}/.ssh/{{ item.value.file_name }}"
    mode: 0600
    owner: "{{ ansible_user_id }}"
  no_log: true
  loop: "{{ ssh_keys | dict2items }}"
  tags:
    - post
    - 1password
