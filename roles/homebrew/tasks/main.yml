- name: Make sure zsh directory exists
  file:
    state: directory
    dest: "{{ role_path }}/zsh"
    mode: 0700
    owner: "{{ ansible_user_id }}"

- name: Template path.zsh into zsh/path.zsh
  template:
    src: path.zsh.j2
    dest: "{{ role_path }}/zsh/path.zsh"
    mode: 0600
    owner: "{{ ansible_user_id }}"

- name: Add the homebrew github token file
  set_fact:
    homebrew_github_token: "{{
      lookup(
        'onepassword_raw',
        'Github'
      ) | json_query('details.sections[?title==`Personal Access Tokens`].fields | [] | [?t==`PAT - homebrew`].v | [0]')
    }}"
  no_log: true
  tags:
    - post
    - onepassword

- name: Template env.zsh into zsh/env.zsh
  template:
    src: env.zsh.j2
    dest: "{{ role_path }}/zsh/env.zsh"
    mode: 0600
    owner: "{{ ansible_user_id }}"
  tags:
    - post
    - onepassword

- name: Run brew update
  command: brew update
  register: R_brew_update
  changed_when:
    - R_brew_update.stderr
  ignore_errors: true
  tags:
    - internet

- name: Output brew update
  debug:
    msg:
      - "stdout:"
      - "{{ R_brew_update.stdout_lines }}"
      - "stderr:"
      - "{{ R_brew_update.stderr_lines }}"
  when:
    - R_brew_update.changed
  failed_when:
    - R_brew_update.failed
  tags:
    - internet

- name: Write brewfile to home directory
  template:
    src: Brewfile.j2
    dest: "{{ ansible_env.HOME }}/.Brewfile"
    mode: 0600
    owner: "{{ ansible_user_id }}"

- name: Install homebrew packages with bundle
  command: brew bundle --global
  register: R_brew_bundle
  changed_when:
    - (R_brew_bundle.stderr)                 or
      ("Installing" in R_brew_bundle.stdout) or
      ("Upgrading"  in R_brew_bundle.stdout)
  ignore_errors: true
  tags:
    - internet

- name: Output bundle
  debug:
    msg:
      - "stdout:"
      - "{{ R_brew_bundle.stdout_lines | select('match', '^Installing*') | list }}"
      - "stderr:"
      - "{{ R_brew_bundle.stderr_lines }}"
  when:
    - R_brew_bundle.changed
  failed_when:
    - R_brew_bundle.failed
  tags:
    - internet

- name: Cleanup homebrew with bundle
  command: brew bundle cleanup --global --force
  register: R_brew_bundle_clean
  changed_when:
    - R_brew_bundle_clean.stdout or R_brew_bundle_clean.stderr
  ignore_errors: true
  tags:
    - internet

- name: Output bundle cleanup
  debug:
    msg:
      - "stdout:"
      - "{{ R_brew_bundle_clean.stdout_lines }}"
      - "stderr:"
      - "{{ R_brew_bundle_clean.stderr_lines }}"
  when:
    - R_brew_bundle_clean.changed
  failed_when:
    - R_brew_bundle_clean.failed

# Brewfile only upgrades direct packagers. We run this in case
# dependencies or brew itself need upgrades.
- name: Run brew upgrade
  command: brew upgrade
  register: R_brew_upgrade
  changed_when:
    - R_brew_upgrade.stderr
  ignore_errors: true

- name: Output brew upgrade
  debug:
    msg:
      - "stdout:"
      - "{{ R_brew_upgrade.stdout_lines }}"
      - "stderr:"
      - "{{ R_brew_upgrade.stderr_lines }}"
  when:
    - R_brew_upgrade.changed
  failed_when:
    - R_brew_upgrade.failed

- name: Run brew cleanup
  command: brew cleanup
  register: R_brew_cleanup
  changed_when:
    - R_brew_cleanup.stderr or R_brew_cleanup.stdout
  ignore_errors: true

- name: Output brew cleanup
  debug:
    msg:
      - "stdout:"
      - "{{ R_brew_cleanup.stdout_lines }}"
      - "stderr:"
      - "{{ R_brew_cleanup.stderr_lines }}"
  when:
    - R_brew_cleanup.changed
  failed_when:
    - R_brew_cleanup.failed
