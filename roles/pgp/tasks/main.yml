- name: Check if the key is already imported
  shell: gpg -k {{ item.value.hash }} && gpg -K {{ item.value.hash }}
  register: R_gpg_list
  no_log: true
  changed_when:
    - R_gpg_list.rc != 0
  failed_when:
    - R_gpg_list.rc != 0
    - ("No public key" not in R_gpg_list.stderr)
  loop: "{{ pgp_keys | dict2items }}"
  tags:
    - post
    - onepassword

- name: Copy the pgp public key to a temporary location
  copy:
    content: "{{
      lookup(
        'onepassword_raw',
        item.value.op_name_public
      ) | json_query('details.notesPlain')
    }}"
    dest: "/tmp/pgp_public_{{ item.value.name }}.asc"
    mode: 0600
    owner: "{{ ansible_user_id }}"
  no_log: true
  when:
    - R_gpg_list.results[idx].rc != 0
  loop: "{{ pgp_keys | dict2items }}"
  loop_control:
    index_var: idx
  tags:
    - post
    - onepassword

- name: Copy the pgp private key to a temporary location
  copy:
    content: "{{
      lookup(
        'onepassword_raw',
        item.value.op_name_private
      ) | json_query('details.notesPlain')
    }}"
    dest: "/tmp/pgp_private_{{ item.value.name }}.asc"
    mode: 0600
    owner: "{{ ansible_user_id }}"
  no_log: true
  when:
    - R_gpg_list.results[idx].rc != 0
  loop: "{{ pgp_keys | dict2items }}"
  loop_control:
    index_var: idx
  tags:
    - post
    - onepassword

- name: Import the pgp public key
  command: gpg --import /tmp/pgp_public_{{ item.value.name }}.asc
  no_log: true
  when:
    - R_gpg_list.results[idx].rc != 0
  loop: "{{ pgp_keys | dict2items }}"
  loop_control:
    index_var: idx
  tags:
    - post
    - onepassword

- name: Import the pgp private key
  command: gpg --import /tmp/pgp_private_{{ item.value.name }}.asc
  no_log: true
  when:
    - R_gpg_list.results[idx].rc != 0
  loop: "{{ pgp_keys | dict2items }}"
  loop_control:
    index_var: idx
  tags:
    - post
    - onepassword

- name: Remove the temporary pgp public key
  file:
    state: absent
    path: /tmp/pgp_public_{{ item.value.name }}.asc
  no_log: true
  when:
    - R_gpg_list.results[idx].rc != 0
  loop: "{{ pgp_keys | dict2items }}"
  loop_control:
    index_var: idx
  tags:
    - post
    - onepassword

- name: Remove the temporary pgp private key
  file:
    state: absent
    path: /tmp/pgp_private_{{ item.value.name }}.asc
  no_log: true
  when:
    - R_gpg_list.results[idx].rc != 0
  loop: "{{ pgp_keys | dict2items }}"
  loop_control:
    index_var: idx
  tags:
    - post
    - onepassword
